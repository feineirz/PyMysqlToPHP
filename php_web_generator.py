#! /usr/bin/env python3
from itertools import count
import os, shutil
from pathlib import Path
from colorama import Fore, Back, Style
from mysql_database import *
from helper_functions import *


output_dir = str(Path.home())+'/Output/PHP'
classgen_path = os.path.dirname(os.path.realpath(__file__))


def create_php_web(mysql_connector: MySQLConnector, withlogin_info: WithLoginInfo=None):
    if mysql_connector.dbconn:
        dbname = mysql_connector.connection_info.database
        global output_dir
        output_dir += '/'+dbname

        db = Database(mysql_connector, withlogin_info)
        menu_card = ''
        include_all_classes = ''
        row_count_content = ''
        footer_credits = 'Generated by feinz(feineirz@live.com) â’¸ Copyright 2022'

        print( Fore.GREEN + 'Generate PHP database manipulation webpage')

        tb:DataTable
        for tb in db.datatables:
            search_cond = ''
            orderby_content = ''
            mobile_table_content = ''
            pc_table_header = ''
            pc_table_content = ''

            upload_list_content = ''
            add_params_content = ''
            add_inputs_content = ''
            update_params_content = ''

            print(f'Creating {tb.table_name:.<50}', end='')

            col: DataColumn
            for col in tb.datacolumns:
                # Search Condition
                rftb: DataTable
                if col.referenced_table_name:
                    rftb = DataTable(tb.dbconn, tb.table_schema, col.referenced_table_name)
                if col.is_primary_key:
                    if search_cond == '':
                        search_cond += '.\n'+tab()+'" '
                    else:
                        search_cond += '.\n'+tab()+'" OR '
                    search_cond += col.column_name+' = \'".$filter."\'"'
                elif 'varchar' in col.data_type:
                    if search_cond == '':
                        search_cond += '.\n'+tab()+'" '
                    else:
                        search_cond += '.\n'+tab()+'" OR '
                    search_cond += col.column_name+' LIKE \'%".$filter."%\'"'

                # OrderBy Content
                orderby_content += '''
                                                <option value="{COLUMN_NAME}" <?php if($orderby == '{COLUMN_NAME}') echo 'selected'; ?>>{COLUMN_NAME}</option>'''.replace('{COLUMN_NAME}', col.column_name)

                # Mobile Table Content
                if col.column_name != withlogin_info.password_columnname:
                    if col.referenced_table_name:
                        mobile_table_content += '''
                                        <?php
                                            include_once 'classes/{REF_TABLE_NAME_FIRSTCAP}Cls.php';
                                            ${REF_TABLE_NAME_LOWER} = new {REF_TABLE_NAME_FIRSTCAP}(${TABLE_NAME_LOWER}->{COLUMN_NAME});
                                        ?>
                                        <div class="row dotline-box card-content">
                                            <div class="col col-4 pull-left">{COLUMN_NAME_FIRSTCAP}</div>
                                            <div class="col col-8 pull-right"><?=${TABLE_NAME_LOWER}->Shorten(${REF_TABLE_NAME_LOWER}->{REF_COLUMN_NAME});?></div>
                                        </div>'''.replace(
                            '{REF_TABLE_NAME}', col.referenced_table_name
                        ).replace(
                            '{REF_TABLE_NAME_FIRSTCAP}', camel_cap(col.referenced_table_name)
                        ).replace(
                            '{REF_TABLE_NAME_LOWER}', col.referenced_table_name.lower()
                        ).replace(
                            '{REF_COLUMN_NAME}', col.referenced_column_name  if len(rftb.unique_columns) == 0 else str(rftb.unique_columns[0].column_name)
                        )
                    elif col.data_type == 'text':
                        mobile_table_content += '''
                                        <div class="row dotline-box card-content">
                                            <div class="col col-4 pull-left">{COLUMN_NAME_FIRSTCAP}</div>
                                            <div class="col col-8 pull-right"><?=${TABLE_NAME_LOWER}->Shorten(${TABLE_NAME_LOWER}->{COLUMN_NAME});?></div>
                                        </div>'''
                    elif col.data_type == 'decimal' or col.data_type == 'float':
                        mobile_table_content += '''
                                        <div class="row dotline-box card-content">
                                            <div class="col col-4 pull-left">{COLUMN_NAME_FIRSTCAP}</div>
                                            <div class="col col-8 pull-right"><?=number_format(${TABLE_NAME_LOWER}->{COLUMN_NAME}, 2);?></div>
                                        </div>'''
                    elif '_image' in col.column_name:
                        mobile_table_content += '''
                                        <div class="row dotline-box card-content">
                                            <div class="col col-4 pull-left">{COLUMN_NAME_FIRSTCAP}</div>
                                            <div class="col col-8 pull-right"><img src="<?=${TABLE_NAME_LOWER}->{COLUMN_NAME};?>" width="90%"/></div>
                                        </div>'''
                    elif '_file' in col.column_name:
                        mobile_table_content += '''
                                        <div class="row dotline-box card-content">
                                            <div class="col col-4 pull-left">{COLUMN_NAME_FIRSTCAP}</div>
                                            <div class="col col-8 pull-right"><a href="<?=${TABLE_NAME_LOWER}->{COLUMN_NAME};?>" target="blank"><img src="images/common_download_btn.jpg" height="32px"/></a></div>
                                        </div>'''
                    else:
                        mobile_table_content += '''
                                        <div class="row dotline-box card-content">
                                            <div class="col col-4 pull-left">{COLUMN_NAME_FIRSTCAP}</div>
                                            <div class="col col-8 pull-right"><?=${TABLE_NAME_LOWER}->{COLUMN_NAME};?></div>
                                        </div>'''
                    mobile_table_content = mobile_table_content.replace(
                            '{TABLE_NAME_FIRSTCAP}', camel_cap(tb.table_name)
                        ).replace(
                            '{TABLE_NAME_LOWER}', tb.table_name.lower()
                        ).replace(
                            '{COLUMN_NAME_FIRSTCAP}', camel_cap(col.column_name)
                        ).replace(
                            '{COLUMN_NAME}', col.column_name.lower()
                        )

                    # PC Table Headers
                    column_class = 'pull-right' if any(x in col.data_type for x in ['int', 'dec', 'float', 'real']) else ''
                    if col.referenced_table_name:
                        ref_unique_col = None
                        if len(rftb.unique_columns) > 0:
                            ref_unique_col = DataColumn(rftb.dbconn, rftb.table_schema, rftb.table_name, rftb.unique_columns[0].column_name)
                        column_class = 'pull-right' if ref_unique_col is not None and any(x in ref_unique_col.data_type for x in ['int', 'dec', 'float', 'real']) else ''
                    pc_table_header += '''
                                        <th class="{COLUMN_CLASS}" scope="col">{COLUMN_NAME_FIRSTCAP}</th>'''.replace(
                        '{COLUMN_NAME_FIRSTCAP}', camel_cap(col.column_name)
                    ).replace(
                        '{COLUMN_CLASS}', column_class
                    )
                    
                    # PC Table Content
                    if col.referenced_table_name:
                        pc_table_content += '''
                                                    <?php
                                                        include_once 'classes/{REF_TABLE_NAME_FIRSTCAP}Cls.php';
                                                        ${REF_TABLE_NAME_LOWER} = new {REF_TABLE_NAME_FIRSTCAP}(${TABLE_NAME_LOWER}->{COLUMN_NAME});
                                                    ?>
                                                    <td class="{COLUMN_CLASS}"><?=${REF_TABLE_NAME_LOWER}->{REF_COLUMN_NAME};?></td>'''.replace(
                            '{REF_TABLE_NAME}', col.referenced_table_name
                        ).replace(
                            '{REF_TABLE_NAME_FIRSTCAP}', camel_cap(col.referenced_table_name)
                        ).replace(
                            '{REF_TABLE_NAME_LOWER}', col.referenced_table_name.lower()
                        ).replace(
                            '{REF_COLUMN_NAME}', col.referenced_column_name  if len(rftb.unique_columns) == 0 else rftb.unique_columns[0].column_name
                        )
                    elif col.data_type == 'text':
                        pc_table_content += '''
                                                    <td class="{COLUMN_CLASS}"><?=${TABLE_NAME_LOWER}->Shorten(${TABLE_NAME_LOWER}->{COLUMN_NAME});?></td>'''
                    elif col.data_type == 'decimal' or col.data_type == 'float':
                        pc_table_content += '''
                                                    <td class="{COLUMN_CLASS}"><?=number_format(${TABLE_NAME_LOWER}->{COLUMN_NAME}, 2);?></td>'''
                    elif '_image' in col.column_name:
                        pc_table_content += '''
                                                    <td class="{COLUMN_CLASS}"><img src="<?=${TABLE_NAME_LOWER}->{COLUMN_NAME};?>" width="120px"/></td>'''
                    elif '_file' in col.column_name:
                        pc_table_content += '''
                                                    <td class="{COLUMN_CLASS}"><a href="<?=${TABLE_NAME_LOWER}->{COLUMN_NAME};?>" target="blank"><img src="images/common_download_btn.jpg" height="32px"/></a></td>'''
                    
                    else:
                        pc_table_content += '''
                                                    <td class="{COLUMN_CLASS}"><?=${TABLE_NAME_LOWER}->{COLUMN_NAME};?></td>'''


                    pc_table_content = pc_table_content.replace(
                            '{TABLE_NAME_LOWER}', tb.table_name.lower()
                        ).replace(
                            '{COLUMN_NAME}', col.column_name
                        ).replace(
                            '{COLUMN_CLASS}', column_class
                        )

                # Upload List Content
                if any(x in col.column_name for x in ('_image', '_file')):
                    upload_list_content += '''
        ${COLUMN_NAME_LOWER}_path = '';
        $ext = $_FILES['{COLUMN_NAME_LOWER}']['type'];
        $type = $helper->extension2type($ext);
        $upload_root = ($type == 'files')? 'ulc/files/' : 'ulc/images/';
        $upload_file = $upload_root.basename($_FILES['{COLUMN_NAME_LOWER}']['name']);
        if (move_uploaded_file($_FILES['{COLUMN_NAME_LOWER}']['tmp_name'], $upload_file)) {
            ${COLUMN_NAME_LOWER}_path = $upload_file;
        }
                    '''.replace('{COLUMN_NAME_LOWER}', col.column_name.lower())

                # Add Parameter Content
                if any(x in col.column_name for x in ('_image', '_file')):
                    add_params_content += '''
            ${TABLE_NAME_LOWER}_info->{COLUMN_NAME} = ${COLUMN_NAME}_path;'''
                else:
                    add_params_content += '''
            ${TABLE_NAME_LOWER}_info->{COLUMN_NAME} = $_POST['{COLUMN_NAME}'];'''

                add_params_content = add_params_content.replace(
                    '{TABLE_NAME_LOWER}', tb.table_name.lower()
                ).replace(
                    '{COLUMN_NAME}', col.column_name
                )

                # Add Input Content
                require_flag = ' required ' if not col.is_nullable else ''
                disabled_flag = ''
                if col.is_primary_key or col.column_name == withlogin_info.user_columnname:
                    disabled_flag = ' disabled '
                if col.column_name != withlogin_info.password_columnname:
                    add_inputs_content += '''
                                            <div class="col col-12 mb-2">
                                                <p class="pull-left">
                                                    {COLUMN_NAME_FIRSTCAP}<br/>'''
                    if col.referenced_table_name:
                        add_inputs_content += '''
                                                    <select class="select-text" name="{COLUMN_NAME}">
                                                        <?php
                                                        include_once 'classes/{REF_TABLE_NAME_FIRSTCAP}Cls.php';
                                                        ${REF_TABLE_NAME_LOWER} = new {REF_TABLE_NAME_FIRSTCAP}();
                                                        $rtrs = ${REF_TABLE_NAME_LOWER}->ListRows();
                                                        $lr = $rtrs->Object;
                                                        if ($lr->Count > 0) {
                                                            foreach ($lr->Items as $item){
                                                                $selected = '';
                                                                if ($mode == 'edit' && ${TABLE_NAME_LOWER}->{REF_TABLE_NAME} == $item->{REF_COLUMN_NAME}) $selected = ' selected';
                                                                echo '<option value="'.$item->{REF_COLUMN_NAME}.'"'.$selected.'>'.$item->{REF_COLUMN_NAME}{EXTRA_CONTENT}.'</option>';
                                                            }
                                                        }
                                                        ?>
                                                    </select>'''.replace(
                            '{REF_TABLE_NAME}', col.referenced_table_name
                        ).replace(
                            '{REF_TABLE_NAME_FIRSTCAP}', camel_cap(col.referenced_table_name)
                        ).replace(
                            '{REF_TABLE_NAME_LOWER}', col.referenced_table_name.lower()
                        ).replace(
                            '{REF_COLUMN_NAME}', col.referenced_column_name
                        ).replace(
                            '{EXTRA_CONTENT}', '' if len(rftb.unique_columns) == 0 else ".' : '.$item->"+str(rftb.unique_columns[0].column_name)
                        )
                    elif '_image' in col.column_name:
                        add_inputs_content += '''
                                                    <input type="file" name="{COLUMN_NAME}" class="input-text" placeholder="{COLUMN_NAME_FIRSTCAP}" {REQUIRE_FLAG}<?php if($mode == 'edit') echo '{DISABLED_FLAG}'; ?> <?php if (${TABLE_NAME_LOWER}) echo 'value="'.${TABLE_NAME_LOWER}->{COLUMN_NAME}.'"'; ?>>
                                                    <input type="hidden" name="upload_type" value="image"'''
                    elif '_file' in col.column_name:
                        add_inputs_content += '''
                                                    <input type="file" name="{COLUMN_NAME}" class="input-text" placeholder="{COLUMN_NAME_FIRSTCAP}" {REQUIRE_FLAG}<?php if($mode == 'edit') echo '{DISABLED_FLAG}'; ?> <?php if (${TABLE_NAME_LOWER}) echo 'value="'.${TABLE_NAME_LOWER}->{COLUMN_NAME}.'"'; ?>>
                                                    <input type="hidden" name="upload_type" value="file"'''
                    elif col.data_type == 'text':
                        add_inputs_content += '''
                                                    <textarea name="{COLUMN_NAME}" class="input-text" placeholder="{COLUMN_NAME_FIRSTCAP}"><?php if (${TABLE_NAME_LOWER}) echo ${TABLE_NAME_LOWER}->{COLUMN_NAME}; ?></textarea>
                        '''
                    else:
                        add_inputs_content += '''
                                                    <input type="{INPUT_TYPE}" name="{COLUMN_NAME}" class="input-text" placeholder="{COLUMN_NAME_FIRSTCAP}" {REQUIRE_FLAG}<?php if($mode == 'edit') echo '{DISABLED_FLAG}'; ?> <?php if (${TABLE_NAME_LOWER}) echo 'value="'.${TABLE_NAME_LOWER}->{COLUMN_NAME}.'"'; ?>>'''
                    
                    add_inputs_content += '''
                                                </p>                                                    
                                            </div>'''
                else:
                    add_inputs_content += '''
                                            <div class="col col-12 mb-2">
                                                <p class="pull-left">
                                                    {COLUMN_NAME_FIRSTCAP} <span class="small"><small><?php if($mode == 'edit') echo '(*Leave blank if no change.)'; ?></small></span><br/>
                                                    <input type="{INPUT_TYPE}" name="{COLUMN_NAME}" class="input-text" placeholder="{COLUMN_NAME_FIRSTCAP}" value="">
                                                </p>                                                    
                                            </div>'''
                add_inputs_content = add_inputs_content.replace(
                    '{COLUMN_NAME}', col.column_name
                ).replace(
                    '{COLUMN_NAME_FIRSTCAP}', camel_cap(col.column_name)
                ).replace(
                    '{TABLE_NAME_LOWER}', tb.table_name.lower()
                ).replace(
                    '{TABLE_NAME_FIRSTCAP}', camel_cap(tb.table_name)
                ).replace(
                    '{REQUIRE_FLAG}', require_flag
                ).replace(
                    '{DISABLED_FLAG}', disabled_flag
                ).replace(
                    '{INPUT_TYPE}', 'text' if col.column_name != withlogin_info.password_columnname else 'password'
                )


                if col.column_name != withlogin_info.user_columnname and not col.is_primary_key:
                    if col.column_name != withlogin_info.password_columnname:
                        if any(x in col.column_name for x in ('_image', '_file')):
                            update_params_content += '''
                ${TABLE_NAME_LOWER}->{COLUMN_NAME}(!empty(${COLUMN_NAME}_path)? ${COLUMN_NAME}_path : ${TABLE_NAME_LOWER}->{COLUMN_NAME});'''
                        else:
                            update_params_content += '''
                ${TABLE_NAME_LOWER}->{COLUMN_NAME}(isset($_POST['{COLUMN_NAME}'])? $_POST['{COLUMN_NAME}'] : ${TABLE_NAME_LOWER}->{COLUMN_NAME});'''
                    else:
                        update_params_content += '''
                if (!empty($_POST['{COLUMN_NAME}'])) ${TABLE_NAME_LOWER}->{COLUMN_NAME}($_POST['{COLUMN_NAME}']);'''
                update_params_content = update_params_content.replace(
                    '{COLUMN_NAME}', col.column_name
                ).replace(
                    '{COLUMN_NAME_FIRSTCAP}', camel_cap(col.column_name)
                ).replace(
                    '{TABLE_NAME_LOWER}', tb.table_name.lower()
                )

            include_all_classes += tab()+"include 'classes/"+camel_cap(tb.table_name)+"Cls.php';\n"
            row_count_content += '''
    ${TABLE_NAME_LOWER} = new {TABLE_NAME_FIRSTCAP}();
    $rtrs = ${TABLE_NAME_LOWER}->Count();
    ${TABLE_NAME_LOWER}_row_count = $rtrs->Value;
            '''.replace(
                    '{TABLE_NAME_FIRSTCAP}', camel_cap(tb.table_name)
                ).replace(
                    '{TABLE_NAME_LOWER}', tb.table_name.lower()
                )

            # Delete Message
            delete_message = ''
            u_col: DataColumn
            u_cols = tb.unique_columns
            if len(u_cols) > 0:
                u_col = u_cols[0]
                delete_message = camel_cap(tb.table_name)+'.'+u_col.column_name+':'+' "<?=$'+tb.table_name.lower()+'->'+u_col.column_name+';?>"'
            else:
                delete_message = camel_cap(tb.table_name)+'.'+tb.primary_key+':'+' "<?=$'+tb.table_name.lower()+'->'+tb.primary_key+';?>"'

            search_cond += ';'
            wl_table = DataTable(mysql_connector.dbconn, mysql_connector.connection_info.database, withlogin_info.tablename)
            table_scope_replace_dict = {
                '{SITE_TITLE}': dbname.upper(),
                '{LOGIN_CLASSNAME}': camel_cap(withlogin_info.tablename),
                '{LOGIN_TABLENAME}': withlogin_info.tablename,
                '{LOGIN_TABLENAME_LOWER}': withlogin_info.tablename.lower(),
                '{LOGIN_TABLENAME_PRIMARY_KEY}': wl_table.primary_key,
                '{LOGIN_TABLENAME_PRIMARY_KEY_LOWER}': wl_table.primary_key.lower(),
                '{LOGIN_USERNAME_COLUMNNAME}': withlogin_info.user_columnname,
                '{LOGIN_PASSWORD_COLUMNNAME}': withlogin_info.password_columnname,
                '{LOGIN_USERNAME_COLUMNNAME_FIRSTCAP}': camel_cap(withlogin_info.user_columnname),
                '{LOGIN_PASSWORD_COLUMNNAME_FIRSTCAP}': camel_cap(withlogin_info.password_columnname),
                '{TABLE_NAME}': tb.table_name,
                '{TABLE_NAME_UPPER}': tb.table_name.upper().replace('_', ' '),
                '{TABLE_NAME_LOWER}': tb.table_name.lower(),
                '{TABLE_NAME_FIRSTCAP}': camel_cap(tb.table_name),
                '{TABLE_PRIMARY_KEY}': tb.primary_key,
                '{SEARCH_CONDITION}': search_cond,
                '{ORDERBY_CONTENT}': orderby_content,
                '{MOBILE_TABLE_CONTENT}': mobile_table_content,
                '{PC_TABLE_HEADER}': pc_table_header,
                '{PC_TABLE_CONTENT}': pc_table_content,
                '{UPLOAD_LIST_CONTENT}': upload_list_content,
                '{ADD_PARAMS_CONTENT}': add_params_content,
                '{ADD_INPUTS_CONTENT}': add_inputs_content,
                '{UPDATE_PARAMS_CONTENT}': update_params_content,
                '{DELETE_MESSAGE}': delete_message,
                '{FOOTER_CREDITS}': footer_credits
            }

            menu_card += '''
            <!-- {TABLE_NAME_FIRSTCAP} -->
            <div class="col col-12 col-md-6 col-lg-4 mb-4 trans-white-0">
                <div class="card hg-400 rounded-box-5">
                    <div class="card-body pull-center pull-middle trans-white-0 hg-700 common-card rounded-box-5 text-dark">
                        <p class="h3">{TABLE_NAME_UPPER}</p>
                        <hr>
                        <p class="h6" style="min-height: 4em;">{TABLE_COMMENT}</p>
                        <p class="big-digit mt-2"><?=${TABLE_NAME_LOWER}_row_count;?></p>
                        <p class="h6">record(s) found.</p>
                    </div>
                    <div class="card-body pull-center pull-middle trans-white-0 hg-150 common-card rounded-box-5 text-dark">
                        <a href="{TABLE_NAME_LOWER}_mgr.php">
                            <span class="btn btn-warning h4 pull-center pull-bottom rounded-box-5">Manage {TABLE_NAME_FIRSTCAP}</span>
                        </a>                    
                    </div>
                </div>
            </div>
            '''.replace('{TABLE_COMMENT}', tb.table_comment)
            menu_card = replace_content(menu_card, table_scope_replace_dict)

            # Management files set
            path = classgen_path+'/templates/phpweb/common_mgr.phpt'
            outpath = output_dir+'/'+tb.table_name.lower()+'_mgr.php'
            replace_file_content(path, table_scope_replace_dict, outpath)

            path = classgen_path+'/templates/phpweb/common_add.phpt'
            outpath = output_dir+'/'+tb.table_name.lower()+'_add.php'
            replace_file_content(path, table_scope_replace_dict, outpath)

            path = classgen_path+'/templates/phpweb/common_del.phpt'
            outpath = output_dir+'/'+tb.table_name.lower()+'_del.php'
            replace_file_content(path, table_scope_replace_dict, outpath)

            state = 'Completed'
            print(f'{state:.>10}')

        wl_table = DataTable(mysql_connector.dbconn, mysql_connector.connection_info.database, withlogin_info.tablename)

        replace_dict = {
            '{SITE_TITLE}': dbname.upper(),
            '{LOGIN_CLASSNAME}': camel_cap(withlogin_info.tablename),
            '{LOGIN_TABLENAME}': withlogin_info.tablename,
            '{LOGIN_TABLENAME_LOWER}': withlogin_info.tablename.lower(),
            '{LOGIN_TABLENAME_PRIMARY_KEY}': wl_table.primary_key,
            '{LOGIN_TABLENAME_PRIMARY_KEY_LOWER}': wl_table.primary_key.lower(),
            '{LOGIN_USERNAME_COLUMNNAME}': withlogin_info.user_columnname,
            '{LOGIN_PASSWORD_COLUMNNAME}': withlogin_info.password_columnname,
            '{LOGIN_USERNAME_COLUMNNAME_FIRSTCAP}': camel_cap(withlogin_info.user_columnname),
            '{LOGIN_PASSWORD_COLUMNNAME_FIRSTCAP}': camel_cap(withlogin_info.password_columnname),
            '{INDEX_MENU_CARDS}': menu_card,
            '{INCLUDE_ALL_CLASSES}': include_all_classes,
            '{ROW_COUNT_CONTENT}': row_count_content,
            '{FOOTER_CREDITS}': footer_credits
        } 
        title = 'login and index page'
        print(f'Creating {title:.<50}', end='')
        # head.php
        path = classgen_path+'/templates/phpweb/head.phpt'
        outpath = output_dir+'/head.php'
        replace_file_content(path, replace_dict, outpath)

        # login.php
        path = classgen_path+'/templates/phpweb/login.phpt'
        outpath = output_dir+'/login.php'
        replace_file_content(path, replace_dict, outpath)

        # index.php
        path = classgen_path+'/templates/phpweb/index.phpt'
        outpath = output_dir+'/index.php'
        replace_file_content(path, replace_dict, outpath)

        # footer.php
        path = classgen_path+'/templates/phpweb/footer.phpt'
        outpath = output_dir+'/footer.php'
        replace_file_content(path, replace_dict, outpath)

        # Direct copy
        shutil.copytree(classgen_path+'/templates/phpweb/classes', output_dir+'/classes', dirs_exist_ok=True)
        shutil.copytree(classgen_path+'/templates/phpweb/css', output_dir+'/css', dirs_exist_ok=True)
        shutil.copytree(classgen_path+'/templates/phpweb/images', output_dir+'/images', dirs_exist_ok=True)
        shutil.copytree(classgen_path+'/templates/phpweb/ulc/images', output_dir+'/ulc/images', dirs_exist_ok=True)
        shutil.copytree(classgen_path+'/templates/phpweb/ulc/files', output_dir+'/ulc/files', dirs_exist_ok=True)

        state = 'Completed'
        print(f'{state:.>10}')

        title = 'helper scripts'
        print(f'Creating {title:.<50}', end='')

        update_www_script = '''
#!/bin/bash
sudo cp -r ~/Output/PHP/{SCHEMA_NAME} /var/www/html
sudo chown -R www-data:www-data /var/www
sudo chmod -R 0775 /var/www
echo '/var/www/html/{SCHEMA_NAME} update completed.'
        '''.replace('{SCHEMA_NAME}', db.schema_name)
        path = classgen_path+'/update_www_'+db.schema_name.lower()
        writefile(path, update_www_script)
        os.chmod(path, 0o700)

        repalce_www_script = '''
#!/bin/bash
sudo rm -rf /var/www/html/{SCHEMA_NAME}
sudo cp -r ~/Output/PHP/{SCHEMA_NAME} /var/www/html
sudo chown -R www-data:www-data /var/www
sudo chmod -R 0775 /var/www
echo '/var/www/html/{SCHEMA_NAME} replacing completed.'
        '''.replace('{SCHEMA_NAME}', db.schema_name)
        path = classgen_path+'/replace_www_'+db.schema_name.lower()
        writefile(path, repalce_www_script)
        os.chmod(path, 0o700)

        remove_output_script = '''
#!/bin/bash
sudo rm -rf ~/Output/PHP/{SCHEMA_NAME}
echo '/var/www/html/{SCHEMA_NAME} remove completed.'
        '''.replace('{SCHEMA_NAME}', db.schema_name)
        path = classgen_path+'/remove_output_'+db.schema_name.lower()
        writefile(path, remove_output_script)
        os.chmod(path, 0o700)

        remove_www_script = '''
#!/bin/bash
sudo rm -rf /var/www/html/{SCHEMA_NAME}
echo '/var/www/html/{SCHEMA_NAME} remove completed.'
        '''.replace('{SCHEMA_NAME}', db.schema_name)
        path = classgen_path+'/remove_www_'+db.schema_name.lower()
        writefile(path, remove_www_script)
        os.chmod(path, 0o700)

        state = 'Completed'
        print(f'{state:.>10}')
        print('Generating successful.')
        print(Style.RESET_ALL)

